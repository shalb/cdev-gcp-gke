# Define common go-template variables for templating
{{- $createVpcCIDR := "10.8.0.0/18" -}}
{{- $google_compute_subnetwork_cidr_range := "10.70.0.0/18" -}}
{{- $services_cidr_range := "10.70.64.0/18" -}}
{{- $cluster_cidr_range := "10.70.128.0/17" -}}
{{- $region := .variables.region -}}
# Define common used anchors
_p: &provider_gcp
- google:
    project: {{ .variables.project }}
    region: {{ .variables.region }}

# Define template
kind: StackTemplate
name: gcp-gke
# Define units itself
units:
  {{- if not .variables.vpc_id }}
  -
    name: vpc
    type: tfmodule
    providers: *provider_gcp
    source: terraform-google-modules/network/google
    version: "5.2.0"
    inputs:
      project_id: {{ .variables.project }}
      network_name: {{ .variables.environment }}-network
      routing_mode: "GLOBAL"
      subnets:
        - subnet_name: {{ .variables.environment }}-network
          subnet_ip: {{ $google_compute_subnetwork_cidr_range }}
          subnet_region: {{ .variables.region }}
          subnet_private_access: true
      secondary_ranges:
        {{ .variables.environment }}-network:
          - range_name: {{ .variables.environment }}-pods
            ip_cidr_range: {{ $cluster_cidr_range }}
          - range_name: {{ .variables.environment }}-services
            ip_cidr_range: {{ $services_cidr_range }}
      routes:
        - name: {{ .variables.environment }}-egress-internet
          description: "route through IGW to access internet"
          destination_range: "0.0.0.0/0"
          tags: "egress-inet"
          next_hop_internet: "true"
  {{- end }}
  {{- if not .variables.vpc_id }}
  -
    name: cloud-nat
    type: tfmodule
    providers: *provider_gcp
    source: github.com/terraform-google-modules/terraform-google-cloud-nat.git
    depends_on: this.vpc
    inputs:
      project_id: {{ .variables.project }}
      region: {{ .variables.region }}
      router: {{ .variables.environment }}-router
      create_router: true
      network: {{ remoteState "this.vpc.network_self_link" }}
  {{- end }}
  - 
    name: gke
    type: tfmodule
    providers: *provider_gcp
    source: "terraform-google-modules/kubernetes-engine/google//modules/beta-private-cluster"
    depends_on: this.vpc
    version: "23.2.0"
    inputs:
      project_id: {{ .variables.project }}
      name: "{{ .variables.environment }}-cluster"
      enable_private_endpoint: false
      enable_private_nodes: true
      filestore_csi_driver: true
      grant_registry_access: true
      horizontal_pod_autoscaling: false
      http_load_balancing: true
      add_master_webhook_firewall_rules: true
      identity_namespace: "enabled"
      initial_node_count: 0
      ip_range_pods: "{{ .variables.environment }}-pods"
      ip_range_services: "{{ .variables.environment }}-services"
      network: {{ remoteState "this.vpc.network_name" }}
      network_policy: false
      region: {{ .variables.region }}
      regional: false
      release_channel: "STABLE"
      remove_default_node_pool: true
      subnetwork: "{{ .variables.environment }}-network"
      zones:
        - {{ .variables.region }}-a
        - {{ .variables.region }}-b
        - {{ .variables.region }}-c
      node_pools:
        - name: "{{ .variables.environment }}-cluster-node-pool"
          auto_repair: true
          auto_upgrade: true
          create_service_account: true
          enable_secure_boot: true
          disk_size_gb: {{ .variables.node_pool_disk_size_gb }}
          disk_type: {{ .variables.node_pool_disk_type }}
          enable_gcfs: false
          image_type: "COS_CONTAINERD"
          initial_node_count: {{ .variables.node_pool_initial_node_count }}
          local_ssd_count: 0
          machine_type: {{ .variables.node_pool_machine_type }}
          max_count: {{ .variables.node_pool_max_count }}
          min_count: {{ .variables.node_pool_min_count }}
          node_locations: {{ .variables.region }}-a
          preemptible: false
  -
    name: gke-addons
    type: tfmodule
    providers: *provider_gcp
    source: "github.com/shalb/terraform-gke-addons?ref=main"
    depends_on: this.gke
    inputs:
      gke_endpoint: {{ remoteState "this.gke.endpoint" }}
      gke_ca_certificate: {{ remoteState "this.gke.ca_certificate" }}
      cluster-name: "{{ .variables.environment }}-cluster"
      project_id: {{ .variables.project }}
      enable_reloader: true
      enable_nginx: true
      enable_cert_manager: true
      enable_external_secrets: true
  -
    name: outputs
    type: printer
    outputs:
      cluster_name: {{ .variables.cluster_name }}
      region: {{ .variables.region }}
